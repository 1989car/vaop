trigger:
  branches:
    include:
    - features/*
    - bug/*
    - master
    - staging

resources:
  containers:
  - container: mariadb
    image: mariadb:10.2
    ports:
    - 3306
    env:
    - MYSQL_ROOT_PASSWORD: secret
    - MYSQL_DATABASE: test
  - container: redis
    image: redis:5
    ports:
    - 6379

jobs:

- job: 'PHP'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      PHP71:
        phpVersion: '7.1'
      PHP72:
        phpVersion: '7.2'
    maxParallel: 5
  services:
    mariadb: mariadb
    redis: redis

  steps:
  - script: export DB_PORT=${agent.services.mariadb.ports.3306}
    displayName: 'export DB_PORT'
  - script: export REDIS_PORT=${agent.services.redis.ports.6379}
    displayName: 'export REDIS_PORT'
    
  - script: |
      sudo update-alternatives --set php /usr/bin/php$(phpVersion)
      sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
      sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
      sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
      sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
      php -version
    displayName: 'Use PHP version $(phpVersion)'

  - script: composer config http-basic.nova.laravel.com $(NOVA_USERNAME) $(NOVA_PASSWORD)
    displayName: 'composer nova authentication'

  - script: composer install --no-interaction --prefer-dist
    displayName: 'composer install'

  - script: cp .env.testing .env
    displayName: 'setup .env'

  - script: php artisan key:generate
    displayName: 'generate encryption key'

  - script: php artisan migrate --seed
    displayName: 'database migrations and seeding'

  - script: ./vendor/bin/phpunit
    displayName: 'phpunit testing'

- job: 'NodeJS'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: npm install
    displayName: 'npm install'

  - script: npm run prod
    displayName: 'npm install prod build'
